services:
  gateway:
    depends_on:
      - frontend
      - backend
    image: nginx:1.14.2
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf.tmpl:Z
    restart: always
    networks:
      - front-tier
    ports:
      - "80:80"
    environment:
      - BACKEND_HOST=backend
      - BACKEND_PORT=3000
      - FRONTEND_HOST=frontend
      - FRONTEND_PORT=4200
    command: ./bin/bash -c "envsubst '$${BACKEND_HOST},$${BACKEND_PORT},$${FRONTEND_HOST},$${FRONTEND_PORT}' < ./etc/nginx/conf.d/default.conf.tmpl > ./etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'"
  frontend:
    build:
      dockerfile: ./frontend.Dockerfile
    restart: always
    networks:
      - front-tier
    ports:
      - "4200:80"
  backend:
    depends_on:
      - db
    build: 
      dockerfile: ./api.Dockerfile
    restart: always
    networks:
      - front-tier
      - back-tier
    ports:
      - "3000:3000"
    environment:
      - DSH_USER=dsh
      - DSH_DB=dsh
      - DSH_PASS=dsh
      - DSH_HOST=db
      - DSH_PORT=5432
      - SERVER_PORT=3000
  db:
    image: postgis/postgis # <- replace?
    restart: always
    networks:
      - back-tier
    volumes:
      - ./db-data:/var/lib/postgresql/data:Z
    environment:
      - POSTGRES_DB=dsh
      - POSTGRES_USER=dsh
      - POSTGRES_PASSWORD=dsh
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U dsh" ]
      interval: 30s
      timeout: 30s
      retries: 3
    ports:
      - "5432:5432"
  seeder:
    build:
      dockerfile: seeder.Dockerfile
    volumes:
      - ./setup-seeder.sh:/app/setup.sh:z
    depends_on:
      db:
        condition: service_healthy

    networks:
      - back-tier
    environment:
      DSH_HOST: db
      DSH_PORT: 5432
      DSH_DB: dsh
      DSH_USER: dsh
      DSH_PASSWORD: dsh

networks:
  front-tier:
  back-tier:
