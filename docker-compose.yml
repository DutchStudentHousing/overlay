services:
  gateway:
    depends_on:
      - frontend
      - backend
    image: nginx
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf.tmpl:Z
    restart: always
    networks:
      - front-tier
    ports:
      - "8080:8080"
    environment:
      - BACKEND_HOST=backend
      - BACKEND_PORT=3000
      - FRONTEND_HOST=frontend
      - FRONTEND_PORT=4200
    command: /bin/bash -c "envsubst < /etc/nginx/nginx.conf.tmpl > /etc/nginx/nginx.conf && nginx -g 'daemon off;'"
  frontend:
    build: ./frontend
    restart: always
    networks:
      - front-tier
    ports:
      - "4200:4200"
  backend:
    depends_on:
      - db
    build: ./api
    restart: always
    # volumes:
    #   - ./api/build/libs/api-0.0.1-SNAPSHOT.jar:/app/api.jar:Z
    networks:
      - front-tier
      - back-tier
    ports:
      - "3000:3000"
    environment:
      - DSH_USER=dsh
      - DSH_DB=dsh
      # - DSH_PASS_FILE=/run/secrets/postgres-passwd
      - DSH_PASS=dsh
      - DSH_HOST=db
      - DSH_PORT=5432
    secrets:
      - postgres-passwd
  db:
    image: postgis/postgis
    restart: always
    networks:
      - back-tier
    volumes:
      - db-data:/var/lib/postgresql/data:rw
    environment:
      - POSTGRES_DB=dsh
      - POSTGRES_USER=dsh
      - POSTGRES_PASSWORD=dsh
      # - POSTGRES_PASSWORD_FILE=/run/secrets/postgres-passwd
    secrets:
      - postgres-passwd
      
secrets:
  postgres-passwd:
    external: true

networks:
  front-tier:
  back-tier:
